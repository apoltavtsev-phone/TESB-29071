package beans;

import java.io.IOException;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.apache.camel.impl.DefaultPollingConsumerPollStrategy;
import org.apache.camel.Consumer;
import org.apache.camel.Endpoint;
import org.xml.sax.SAXException;

/*
 * Polling Strategy for sftp download
 */

public class EnrichPollingStrategy extends DefaultPollingConsumerPollStrategy {
	
	private Map<Consumer, Long> mapConsumers = new ConcurrentHashMap<>();
	private long timeLimit;

	public EnrichPollingStrategy(final long timeLimit) {
		this.timeLimit = timeLimit;
	}
	
	public void hold(Consumer consumer) {
		mapConsumers.put(consumer, System.currentTimeMillis());
	}

	public void purge() {
		
		mapConsumers.forEach((consumer, startTime) -> {
            if (System.currentTimeMillis() - startTime > timeLimit) {
				try {
					consumer.stop();
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
					mapConsumers.remove(consumer);
				}
            }
		});
	}

    @Override
    public boolean begin(Consumer consumer, Endpoint endpoint) {
    	this.hold(consumer);
        return super.begin(consumer, endpoint);
    }
}
